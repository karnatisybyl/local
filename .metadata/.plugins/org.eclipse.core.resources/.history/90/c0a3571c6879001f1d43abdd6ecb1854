<?xml version="1.0" encoding="UTF-8"?>
<api context="/email" name="EmailService" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/send">
        <inSequence>
            <!-- Extract relevant properties from the request -->
            <property expression="$body" name="requestBody" scope="default" type="STRING"/>
            <property expression="//sender/text()" name="sender" scope="default" type="STRING"/>
            <property expression="//recipient/text()" name="recipient" scope="default" type="STRING"/>
            <property expression="//message/text()" name="message" scope="default" type="STRING"/>
            <property expression="//timestamp/text()" name="timestamp" scope="default" type="STRING"/>
            <cache collector="false" maxMessageSize="43200" timeout="86400">
                <onCacheHit>
                    <payloadFactory description="cache-response" media-type="json">
                        <format>{&#xd;
    "result": "$1"&#xd;
}</format>
                        <args>
                            <arg evaluator="json" expression="$.result"/>
                        </args>
                    </payloadFactory>
                    <property description="setresultsso" expression="json-eval($.result)" name="setresultsso" scope="default" type="STRING"/>
                    <log description=" ssologinrequestlog-log" level="custom" separator="&#xa;">
                        <property expression="fn:concat('***cached response to*** ', get-property('setresultsso')) " name="sso-result"/>
                    </log>
                    <respond/>
                </onCacheHit>
                <protocol type="HTTP">
                    <methods>*</methods>
                    <headersToExcludeInHash/>
                    <headersToIncludeInHash/>
                    <responseCodes>.*</responseCodes>
                    <enableCacheControl>false</enableCacheControl>
                    <includeAgeHeader>false</includeAgeHeader>
                    <hashGenerator>org.wso2.carbon.mediator.cache.digest.HttpRequestHashGenerator</hashGenerator>
                </protocol>
                <implementation maxSize="1000"/>
            </cache>
            <payloadFactory media-type="json">
                <format>
                    {
                        "sender": "$1",
                        "recipient": "$2",
                        "message": "$3",
                        "timestamp": "$4"
                    }
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('sender')"/>
                    <arg evaluator="xml" expression="get-property('recipient')"/>
                    <arg evaluator="xml" expression="get-property('message')"/>
                    <arg evaluator="xml" expression="get-property('timestamp')"/>
                </args>
            </payloadFactory>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <send/>
        </inSequence>
        <outSequence>
            <cache collector="true"/>
            <log level="full" separator="&#xa;"/>
            <cache collector="true"/>
            <property description="setresultsso" expression="json-eval($.sender)" name="setresultsso" scope="default" type="STRING"/>
            <log description=" ssologinrequestlog-log" level="custom" separator="&#xa;">
                <property expression="fn:concat('****not cached response to*****', get-property('setresultsso')) " name="ss0-result"/>
            </log>
            <send/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
