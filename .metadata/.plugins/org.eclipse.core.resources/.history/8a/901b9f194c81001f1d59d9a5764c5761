package ipsl.signature;

public class Mpesabtc {

    public static void main(String[] args) {
        // Test input: simulate the property 'fcubs_req_env' value
        String fcubsReqEnv = "<![CDATA[<FCUBS_REQ_ENV xmlns=\"http://fcubs.iflex.com/service/FCUBSRTService/CreateTransaction\"><FCUBS_HEADER><SOURCE>AL01U</SOURCE><UBSCOMP>FCUBS</UBSCOMP><USERID>AL01USRU</USERID><BRANCH>094</BRANCH><SERVICE>FCUBSRTService</SERVICE><OPERATION>CreateTransaction</OPERATION></FCUBS_HEADER><FCUBS_BODY><Transaction-Details-IO><XREF>RGV7UQA169-70365807</XREF><PRD>SMSP</PRD><BRN>094</BRN><TXNBRN>094</TXNBRN><TXNACC>094000023874</TXNACC><TXNCCY>KES</TXNCCY><TXNTRN>PYB</TXNTRN><OFFSETBRN>000</OFFSETBRN><OFFSETACC>A01040002</OFFSETACC><OFFSETCCY>KES</OFFSETCCY><OFFSETAMT>1000.00</OFFSETAMT><NARRATIVE> From 254703658077 katana Jacob Alias Code 156452</NARRATIVE></Transaction-Details-IO></FCUBS_BODY></FCUBS_REQ_ENV>]]>";

        // Generate the dynamic SOAP payload
        String soapPayload = frameSOAPPayload(fcubsReqEnv);

        // Print the generated SOAP payload for testing
        System.out.println("Generated SOAP Payload: ");
        System.out.println(soapPayload);
    }

    // Method to dynamically frame the SOAP payload based on input
    private static String frameSOAPPayload(String fcubsReqEnv) {
        return "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" " +
               "xmlns:typ=\"http://types.ws.gw.fcubs.iflex.com\">" +
               "   <soapenv:Header/>" +
               "   <soapenv:Body>" +
               "      <typ:CreateTransaction>" + fcubsReqEnv + "</typ:CreateTransaction>" +
               "   </soapenv:Body>" +
               "</soapenv:Envelope>";
    }
}
