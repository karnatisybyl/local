package ipsl.signature;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

public class SPAuthentication {
    public static String generateSPPassword(String spId, String password, String timeStamp) throws NoSuchAlgorithmException {
        String dataToEncrypt = spId + password + timeStamp;
        System.out.println("Data to encrypt: " + dataToEncrypt);  // Display the combined string for hashing

        MessageDigest digest = MessageDigest.getInstance("SHA-256");

        // Perform the hash calculation
        byte[] hash = digest.digest(dataToEncrypt.getBytes(StandardCharsets.UTF_8));
        System.out.print("SHA-256 Hash (bytes): ");
        for (byte b : hash) {
            System.out.printf("%02x", b);
        }
        System.out.println();

        // Encode the hashed result to Base64
        String spPassword = Base64.getEncoder().encodeToString(hash);
        System.out.println("spPassword (Base64 encoded): " + spPassword);  // Show the Base64-encoded string

        return spPassword;
    }

    public static void main(String[] args) {
        try {
            String spId = "107031";
            String password = "Safaricom123!";
            String timeStamp = "20241025071745";  

            System.out.println("Generated TimeStamp: " + timeStamp);

            String spPassword = generateSPPassword(spId, password, timeStamp);
            System.out.println("Generated SP Password: " + spPassword);

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
    }
}
