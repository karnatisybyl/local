<?xml version="1.0" encoding="UTF-8"?>
<api context="/aa" name="aa" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST">
        <inSequence>
            <!-- Log the full payload -->
            <log level="custom">
                <property expression="json-eval($.email)" name="email"/>
                <property expression="json-eval($.password)" name="password"/>
            </log>
            <cache collector="false" maxMessageSize="31457280" timeout="5">
                <onCacheHit>
                    <payloadFactory description="cache-response" media-type="json">
                        <format>{&#xd;
								    "result": "$1"&#xd;
								}</format>
                        <args>
                            <arg evaluator="json" expression="$.result"/>
                        </args>
                    </payloadFactory>
                    <property description="setresultsso" expression="json-eval($.emailc)" name="setresultsso" scope="default" type="STRING"/>
                    <log description=" ssologinrequestlog-log" level="custom" separator="&#xa;">
                        <property expression="fn:concat('***cached response to*** ', get-property('setresultsso')) " name="sso-result"/>
                    </log>
                    <payloadFactory media-type="json">
                        <format>{ "status": "400", "message": "Duplicate message request detected" }</format>
                        <args/>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                    <respond/>
                </onCacheHit>
                <protocol type="HTTP">
                    <methods>*</methods>
                    <headersToExcludeInHash>*</headersToExcludeInHash>
                    <headersToIncludeInHash/>
                    <responseCodes>.*</responseCodes>
                    <enableCacheControl>false</enableCacheControl>
                    <includeAgeHeader>false</includeAgeHeader>
                    <hashGenerator>org.wso2.carbon.mediator.cache.digest.HttpRequestHashGenerator</hashGenerator>
                </protocol>
                <implementation maxSize="10000"/>
            </cache>
            <payloadFactory description="cache-response" media-type="json">
                <format>{
								    "email": "$1",
								     "password": "$2"
								 
								}</format>
                <args>
                    <arg evaluator="json" expression="$.email"/>
                    <arg evaluator="json" expression="$.password"/>
                </args>
            </payloadFactory>
            <!--  <send>
                <endpoint>
                    <http method="post" uri-template="http://localhost:8290/epcall">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>1</progressionFactor>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </send> -->
        </inSequence>
        <outSequence>
            <cache collector="true"/>
            <property description="setresultsso" expression="json-eval($.emailc)" name="setresultsso" scope="default" type="STRING"/>
            <log description=" ssologinrequestlog-log" level="custom" separator="&#xa;">
                <property expression="fn:concat('****not cached response to*****', get-property('setresultsso')) " name="ss0-result"/>
            </log>
            <send/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
