package ipsl.signature;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.Key;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.UUID;

import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManagerFactory;
import javax.xml.crypto.dsig.CanonicalizationMethod;
import javax.xml.crypto.dsig.DigestMethod;
import javax.xml.crypto.dsig.Reference;
import javax.xml.crypto.dsig.SignatureMethod;
import javax.xml.crypto.dsig.SignedInfo;
import javax.xml.crypto.dsig.Transform;
import javax.xml.crypto.dsig.XMLSignature;
import javax.xml.crypto.dsig.XMLSignatureFactory;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.KeyInfoFactory;
import javax.xml.crypto.dsig.keyinfo.X509Data;
import javax.xml.crypto.dsig.spec.C14NMethodParameterSpec;
import javax.xml.crypto.dsig.spec.TransformParameterSpec;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.synapse.MessageContext;
import org.apache.synapse.mediators.AbstractMediator;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

public class SSLTestClient extends AbstractMediator {
	  private static final Log log = LogFactory.getLog(Test.class);

		protected static String typAlgorithm = "http://www.w3.org/2000/09/xmldsig#enveloped-signature";
		protected static String canAlgorithm = "http://www.w3.org/TR/2001/REC-xml-c14n-20010315";
		protected static String digAlgorithm = "http://www.w3.org/2001/04/xmlenc#sha256";
		protected static String sigAlgorithm = "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256";

		protected static boolean omitDec = true;
		protected static boolean indent = false;

		 private String xmlStringRaw;
		    private String keystoreFile;
		    private String keystorePass;
		    private String keystoreAlias;

		    // Getter and Setter for xmlStringRaw
		    public String getXmlStringRaw() {
		        return xmlStringRaw;
		    }

		    public void setXmlStringRaw(String xmlStringRaw) {
		        this.xmlStringRaw = xmlStringRaw;
		    }

		    // Getter and Setter for keystoreFile
		    public String getKeystoreFile() {
		        return keystoreFile;
		    }

		    public void setKeystoreFile(String keystoreFile) {
		        this.keystoreFile = keystoreFile;
		    }

		    // Getter and Setter for keystorePass
		    public String getKeystorePass() {
		        return keystorePass;
		    }

		    public void setKeystorePass(String keystorePass) {
		        this.keystorePass = keystorePass;
		    }

		    // Getter and Setter for keystoreAlias
		    public String getKeystoreAlias() {
		        return keystoreAlias;
		    }

		    public void setKeystoreAlias(String keystoreAlias) {
		        this.keystoreAlias = keystoreAlias;
		    }
	@Override
	public boolean mediate(MessageContext arg0) {
		// TODO Auto-generated method stub
		return true;
	}
}
