<?xml version="1.0" encoding="UTF-8"?>
<api context="/alerts-sms-v2" name="Alerts-sms-v2" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST">
        <inSequence>
            <!-- PayloadFactory to format the response when a cache hit occurs -->
            <log level="custom">
                <property name="Start of API SMS V2" value="Begin Alerts SMS API processing"/>
                <property expression="json-eval($)" name="Payload"/>
            </log>
            <enrich>
                <source clone="false" type="body"/>
                <target property="PAYLOAD" type="property"/>
            </enrich>
            <log level="full"/>
            <payloadFactory media-type="json">
                <format>{  
	"msisdn": "$1",
	"message": "$2"
}</format>
                <args>
                    <arg evaluator="json" expression="$.msisdn"/>
                    <arg evaluator="json" expression="$.message"/>
                </args>
            </payloadFactory>
            <log level="full"/>
            <cache collector="false" timeout="3560">
                <onCacheHit>
                    <property expression="$body//p1:text" name="cached_sms_request" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd" xmlns:p1="http://ws.apache.org/commons/ns/payload"/>
                    <log>
                        <property name="MSG_FLOW" value="B/E Call"/>
                        <property expression="get-property('cached_sms_request')" name="BODY" xmlns:ns="http://org.apache.synapse/xsd"/>
                    </log>
                    <payloadFactory media-type="text">
                        <format>$1</format>
                        <args>
                            <arg evaluator="xml" expression="get-property('cached_sms_request')" xmlns:ns="http://org.apache.synapse/xsd"/>
                        </args>
                    </payloadFactory>
                    <property name="RESPONSE" scope="default" type="STRING" value="true"/>
                    <payloadFactory media-type="json">
                        <format>{ "status": "400" "message": "Duplicate message request detected" }</format>
                        <args/>
                    </payloadFactory>
                    <!-- Log the cache hit -->
                    <log level="custom">
                        <property name="OnCacheHit" value="Duplicate entry detected"/>
                    </log>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
                    <!-- Respond with the cached response -->
                    <respond/>
                </onCacheHit>
                <protocol type="HTTP">
                    <methods>*</methods>
                    <headersToExcludeInHash/>
                    <headersToIncludeInHash/>
                    <responseCodes>.*</responseCodes>
                    <enableCacheControl>false</enableCacheControl>
                    <includeAgeHeader>false</includeAgeHeader>
                    <hashGenerator>org.wso2.carbon.mediator.cache.digest.HttpRequestHashGenerator</hashGenerator>
                </protocol>
                <implementation maxSize="1000"/>
            </cache>
            <property name="RESPONSE" scope="default" type="STRING" value="true"/>
            <cache collector="true"/>
            <payloadFactory media-type="json">
                <format>$1</format>
                <args>
                    <arg evaluator="json" expression="$ctx:PAYLOAD"/>
                </args>
            </payloadFactory>
            <!--  <call>
                <endpoint key="EP_INTERNAL_ASYNC_INFOBIP"/>
            </call>
            <log level="custom">
                <property expression="$body//p1:text" name="Cached message" xmlns:ns="http://org.apache.synapse/xsd" xmlns:p1="http://ws.apache.org/commons/ns/payload"/>
            </log>
            <payloadFactory media-type="json">
                <format>{  
	"reference": "$1",
	"code": "00",  
	"description": "Successfully Received"
}</format>
                <args>
                    <arg evaluator="json" expression="$ctx:PAYLOAD.smsRequest.reference"/>
                </args>
            </payloadFactory>-->
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
