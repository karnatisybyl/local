<?xml version="1.0" encoding="UTF-8"?>
<api context="/validationApi" name="validationApi" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST">
        <inSequence>
            <property expression=" //*[local-name()='Cdtr']/*[local-name()='Nm']/text()" name="CdtrNm" scope="default" type="STRING"/>
            <property expression="//*[local-name()='Dbtr']/*[local-name()='Nm']/text()" name="DbtrNm" scope="default" type="STRING"/>
            <property expression="//*[local-name()='CdtTrfTxInf']/*[local-name()='Amt']/*[local-name()='InstdAmt']/text()" name="InstdAmt" scope="default" type="STRING"/>
            <property expression="//*[local-name()='Dbtr']/*[local-name()='CtctDtls']/*[local-name()='PhneNb']/text()" name="DbtrPhneNb" scope="default" type="STRING"/>
            <property expression=" //*[local-name()='Cdtr']/*[local-name()='CtctDtls']/*[local-name()='PhneNb']/text()" name="CdtrPhneNb" scope="default" type="STRING"/>
            <log level="custom">
                <property expression=" //*[local-name()='Cdtr']/*[local-name()='Nm']/text()" name="CdtrNm"/>
                <property expression="//*[local-name()='Dbtr']/*[local-name()='Nm']/text()" name="DbtrNm"/>
                <property expression="//*[local-name()='CdtTrfTxInf']/*[local-name()='Amt']/*[local-name()='InstdAmt']/text()" name="InstdAmt"/>
                <property expression="//*[local-name()='Dbtr']/*[local-name()='CtctDtls']/*[local-name()='PhneNb']/text()" name="DbtrPhneNb"/>
                <property expression=" //*[local-name()='Cdtr']/*[local-name()='CtctDtls']/*[local-name()='PhneNb']/text()" name="CdtrPhneNb"/>
            </log>
            <script language="js"><![CDATA[function formatMobileNumber(mobileNumber) {
                            mobileNumber = mobileNumber.trim();
                            if (!/^\d+$/.test(mobileNumber)) {
                                return "Error: Mobile number must contain digits only.";
                            }
                            if (mobileNumber.startsWith('254')) {
                                if (mobileNumber.length !== 12) {
                                    return "Error: Invalid mobile number length.";
                                }
                                return '+' + mobileNumber;
                            }
                            if (mobileNumber.startsWith('07') || mobileNumber.startsWith('01')) {
                                mobileNumber = '254' + mobileNumber.substring(1);
                            } else if (mobileNumber.startsWith('7') || mobileNumber.startsWith('1')) {
                                mobileNumber = '254' + mobileNumber;
                            } else {
                                return "Error: Mobile number must start with '254', '07', '01', '7', or '1'.";
                            }
                            if (mobileNumber.length !== 12) {
                                return "Error: Invalid mobile number length.";
                            }
                            return '+' + mobileNumber;
                        }
                        var phone = formatMobileNumber(mc.getProperty("DbtrPhneNb"));
                        mc.setProperty("FormattedPhoneNumber", phone.toString());]]></script>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
